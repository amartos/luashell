#+author: Alexandre Martos

* Luashell

A very simple Lua interpreter + shell implementation in C++, as a
demo. It currently depends on Lua version =5.4= and GNU's =readline=
library.

** Configuration

The interpreter loads the file located at
=$XDG_CONFIG_HOME/luashell/config.lua=, if it exists, before execution
of any script or the shell's prompt.

** Environment

The interpreter globals are:

| name in shell | default value                        | description       | types        |
|---------------+--------------------------------------+-------------------+--------------|
| CONFFILE      | =$XDG_CONFIG_HOME/luashell/config.lua= | config file path  |              |
| HISTFILE      | =$XDG_DATA_HOME/luashell/history=      | history file path | str, str f() |
| PROMPT        | =>>>=                                  | prompt string     | str, str f() |
| BANNER        |                                      | banner string     | str, str f() |

They can be easily redefined in the config file (persistent
definition) or in the shell/script itself (session/local
definition). Note that some redefinitions do not affect the
shell/script (see below), others may affect it only after restart.

The =types= column contains a comma-separated list of types
that the shell expects to find in the variable. If the type is of the
form =returnType f(argType, argType, ...)=, the value may be a Lua
function of the described prototype (the name =f= does not matter).

If no types are defined, the modification of the variable has no
effect on the interpreter's startup (the global is read-only, or
kind-of).

For a list of available types (applicable to =returnType= and =argType=),
see the [[https://www.lua.org/manual/5.4/manual.html#pdf-type][types used by Lua]]. Their name may be shortened in the table,
for example =str= for =string=. The following types are additional to this
list:

| type | Lua type | description                     |
|------+----------+---------------------------------|
| int  | number   | a number that will be truncated |
